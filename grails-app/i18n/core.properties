#
# Copyright (c) 2011 Kagilum.
#
# This file is part of iceScrum.
#
# iceScrum is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License.
#
# iceScrum is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with iceScrum.  If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
# steven.zh.gm (steven.zh.gm@gmail.com)
# Jeroen Broekhuizen (Jeroen.Broekhuizen@quintiq.com)
# Nicolas Noullet (nnoullet@kagilum.com)
#

acceptanceTest.name.blank=Error, an acceptance test name is required
activity.field.invalid=Error, invalid activity: a before Value or after Value is required when you provide a field
actor.name.blank=Error, an actor name is required
actor.name.unique=Error, an actor with the same name already exists
backlog.code.unique=Error, a backlog with the same name already exists in this project
feature.name.blank=Error, a feature name is required
feature.name.unique=Error, a feature with the same name already exists
invitation.futureRole.invalid=Error, invalid invitation: the role does not match any role allowed for the provided type
invitation.type.invalid=Error, invalid invitation: a team invitation must have a team and no project and a project invitation must have a project and no team
is.acceptanceTest=Acceptance Test
is.acceptanceTest.error.save.storyState=Error: acceptance tests cannot be created on {0} stories.
is.acceptanceTest.error.update.state.storyState=Error: acceptance test state can be changed only on {0} stories.
is.acceptanceTest.error.update.storyState=Error: acceptance tests of done stories cannot be updated.
is.acceptanceTest.state.failed=Failed
is.acceptanceTest.state.success=Success
is.acceptanceTest.state.tocheck=To check
is.acceptanceTest.template.given=Given
is.acceptanceTest.template.then=Then
is.acceptanceTest.template.when=When
is.actor=Actor
is.actor.error.still.hasStories=Error, the actor does still have stories linked
is.actor.help.description=While editing use @ to select actors
is.actor.name=Name
is.app.author=Author
is.app.documentation=Documentation
is.app.version=Version
is.app.website=Website
is.app.widgets=Widgets
is.app.windows=Windows
is.backlogelement=Backlog element
is.backlogelement.attachment=Attachments
is.backlogelement.description=Description
is.backlogelement.error.not.exist=This element does not exist
is.backlogelement.id=ID
is.backlogelement.name=Name
is.backlogelement.notes=Notes
is.backlogelement.tags=Tags
is.cliche=Cliche
is.date.format.short=dd/MM/yyyy
is.date.format.short.time=dd/MM/yyyy HH:mm:ss
is.date.format.shorter=dd/MM
is.error.object.concurrent.modification=Error, the {0} with ID {1} has been updated by someone else at the same time, please try again
is.error.object.not.found=Error, no {0} with ID {1} can been found
is.feature=Feature
is.feature.error.done.stories=Error, to mark a feature as Done all it stories must be Done
is.feature.error.not.business.owner=Error, you are not Business Owner of the portfolio of this project
is.feature.name=Name
is.feature.state.done=Done
is.feature.state.draft=Draft
is.feature.state.inprogress=In progress
is.feature.state.wait=Todo
is.feature.type=Type
is.feature.type.enabler=Enabler
is.feature.type.functional=Functional
is.feature.value=Business value
is.portfolio=Portfolio
is.portfolio.description=Description
is.portfolio.fkey=Key
is.portfolio.framework=Framework
is.portfolio.name=Portfolio name
is.portoflio.add.project.not.productOwner=Error, you are not Product Owner of this project ({0})
is.project=Project
is.project.already.in.portfolio=Already in a portfolio
is.project.archived=Archived
is.project.description=Product goal
is.project.error.already.in.portfolio=Error, project already in a portfolio ({0})
is.project.error.firstSprint=Invalid first sprint date
is.project.error.noMember=Error, at least a member is required
is.project.error.not.archived=Error when archiving / unarchiving project, check the logs
is.project.error.not.deleted=Error when deleting project, check the logs
is.project.name=Project name
is.project.pkey=Key
is.project.preferences.autoDoneFeature=Automatically mark a feature as Done when all its stories are {0}
is.project.preferences.planification.estimatedSprintsDuration=Sprint duration
is.project.preferences.planification.estimationSuite=Suite used for estimation
is.project.preferences.planification.noEstimation=Disable Estimation (effort = 1)
is.project.preferences.project.hideWeekend=Hide weekends in charts
is.project.preferences.project.stakeHolderAccess=Stakeholders permissions
is.project.preferences.project.stakeHolderRestrictedViews=Views disabled for stakeholders
is.project.preferences.sprint.assignOnBeginTask=Auto assign team member on start task
is.project.preferences.sprint.assignOnCreateTask=Auto assign team member on create task
is.project.preferences.sprint.autoCreateTaskOnEmptyStory=Auto create task on empty story when sprint is activated
is.project.preferences.sprint.autoStateStory=Automatically mark a story as {0} when all its tasks are done
is.project.preferences.sprint.displayRecurrentTasks=Display recurrent tasks
is.project.preferences.sprint.displaySprintGoal=Display sprint goal in the Task board
is.project.preferences.sprint.displayUrgentTasks=Display urgent tasks
is.project.preferences.sprint.limitUrgentTasks=Limit of urgent tasks in progress (0 = no limit)
is.project.preferences.timezone=Time zone
is.project.startDate=Start date
is.release=Release
is.release.endDate=End date
is.release.error.activate=Error, this release cannot be activated
is.release.error.close=Error, this release cannot be stopped
is.release.error.endDate.after.next.release=Error, the release end date cannot be after the next release end date
is.release.error.endDate.before.inprogress.sprint=Error, cannot modify the end date of a DONE sprint
is.release.error.not.deleted=Error, this release cannot be deleted
is.release.error.not.exist=Error, release does not exist
is.release.error.reactivate=Error, this release cannot be reactivated
is.release.error.sprint.tasks=Error, the release cannot be shortened because it would delete sprints which tasks would be lost in the deletion ({0})
is.release.error.startDate.after.inprogress.sprint=Error, cannot modify the start date of an IN PROGRESS or DONE sprint
is.release.error.update.state.done=Error, cannot update a release in done state
is.release.firstSprintIndex=First sprint number
is.release.name=Release name
is.release.sprints.not.enough.time=No sprint can be generated: there isn't enough time left
is.release.startDate=Start date
is.release.state=State
is.release.state.done=Done
is.release.state.inprogress=In progress
is.release.state.wait=Todo
is.release.vision=Vision
is.role=Role
is.role.admin=Admin
is.role.businessOwner=Business Owner
is.role.owner=Owner
is.role.poAndSm=PO & SM
is.role.portfolioStakeHolder=StakeHolder
is.role.productOwner=Product Owner
is.role.scrumMaster=ScrumMaster
is.role.stakeHolder=StakeHolder
is.role.teamMember=Team Member
is.sprint=Sprint
is.sprint.copyRecurrentTasks.error.no.recurrent.tasks=Error, no recurrent task on previous sprint
is.sprint.copyRecurrentTasks.error.no.sprint.before=There is no sprint before this one
is.sprint.copyRecurrentTasks.error.sprint.done=Error, can't copy recurrent tasks on sprint done
is.sprint.deliveredVersion=Version
is.sprint.doneDefinition=Definition of done
is.sprint.endDate=End date
is.sprint.error.activate=Error, this sprint cannot be activated
is.sprint.error.activate.other.inprogress=Workflow integrity error: there is already an INPROGRESS sprint
is.sprint.error.activate.release.not.inprogress=Workflow integrity error: the parent release isn't IN PROGRESS
is.sprint.error.associate.done=Workflow integrity error: cannot associate a story in a done sprint.
is.sprint.error.associate.story.done=Workflow integrity error: a story with state {0} cannot be planned again.
is.sprint.error.associate.story.noEstimated=Workflow integrity error: a story must be at least in the state {0} to be planned.
is.sprint.error.close.not.inprogress=Workflow integrity error: the sprint isn't IN PROGRESS
is.sprint.error.delete.inprogress=Workflow integrity error: cannot delete an INPROGRESS sprint
is.sprint.error.not.exist=Sprint does not exist
is.sprint.error.reactivate.next.not.wait=Workflow integrity error: the next sprint isn't in the Wait state
is.sprint.error.release.done=Error, the parent release is DONE
is.sprint.error.state.not.inProgress=Error, the sprint must be in progress
is.sprint.error.update.done=Workflow integrity error: cannot update a DONE sprint
is.sprint.error.update.startdate.inprogress=Workflow integrity error: cannot update the startDate of an INPROGRESS sprint
is.sprint.goal=Sprint goal
is.sprint.initialRemainingTime=Initial task remaining time
is.sprint.plannedVelocity=Planned velocity
is.sprint.retrospective=Retrospective
is.sprint.startDate=Start date
is.sprint.state.done=Done
is.sprint.state.inprogress=In progress
is.sprint.state.wait=Todo
is.sprint.velocity=Velocity
is.story=Story
is.story.affectVersion=Affected version
is.story.creator=Creator
is.story.deleted=Story deleted
is.story.dependences=Dependences
is.story.dependsOn=Depends on
is.story.effort=Effort
is.story.error.dependences=Error, the story "{0}" cannot move back in the workflow behind a story that depends on it: "{1}"
is.story.error.dependsOn=Error, the story "{0}" depends on "{1}", it cannot advance past it in the workflow
is.story.error.done=Error, the story is {0}
is.story.error.feature=Error, a story that is not Done cannot be associated to a Done feature
is.story.error.markAsDone.not.inProgress=Error, the sprint must be in progress to mark / unmark a story as {0}
is.story.error.not.acceptedAsUrgentTask=Error, there is no in progress sprint available to create an urgent task
is.story.error.not.deleted.permission=Error, you don't have the permission to delete the story
is.story.error.not.deleted.state=Error, story can't be deleted in its current state.
is.story.error.not.estimated.state=Error, story can't be estimated in its current state.
is.story.error.not.in.backlog=Error, the story is not in state {0} or {1}
is.story.error.not.planned=Error, the story is not into a sprint
is.story.error.not.state.suggested=Error, the story must be {0} to be accepted
is.story.error.not.unestimated.state=Error, story must have an effort in its current state.
is.story.error.plan.type=Error, a story with this type cannot be planned.
is.story.error.unplan.done=Error, a done story cannot be unplanned.
is.story.error.workflow=Error, a story cannot be marked as {0} from the state {1} with this action
is.story.name=Name
is.story.origin=Origin
is.story.rank=Rank
is.story.selection.cloned=The selection has been successfully copied to the sandbox
is.story.state=State
is.story.state.accepted=Accepted
is.story.state.done=Done
is.story.state.estimated=Estimated
is.story.state.frozen=Frozen
is.story.state.inReview=In review
is.story.state.inprogress=In progress
is.story.state.planned=Planned
is.story.state.suggested=Suggested
is.story.template.as=As a
is.story.template.ican=I want to
is.story.template.to=In order to
is.story.teststate.failed=Failed
is.story.teststate.success=Success
is.story.teststate.tocheck=To check
is.story.type=Type
is.story.type.defect=Defect story
is.story.type.story=User story
is.story.type.technical=Technical story
is.story.value=Value
is.task=Task
is.task.copied=Task copied
is.task.creator=Creator
is.task.deleted=Task deleted
is.task.error.copy.done=Error, you cannot copy a task done
is.task.error.delete.not.scrumMaster=Error, only a ScrumMaster can delete a done task
is.task.error.delete.sprint.done=Error, a task cannot be deleted from a done sprint
is.task.error.done=Error, you cannot update a task done
is.task.error.estimation.number=Error, an estimation must be a number
is.task.error.limitTasksUrgent=Error, the limit of urgent tasks in progress ({0}) has been reached
is.task.error.not.saved=Error while saving task
is.task.error.unassign.not.responsible=Error, you are not responsible of the task
is.task.estimation=Remaining time
is.task.initial.long=Initial:
is.task.name=Name
is.task.responsible=Responsible
is.task.spent=Time spent
is.task.state=State
is.task.state.done=Done
is.task.state.inprogress=In progress
is.task.state.wait=Todo
is.task.taken=You are responsible for the task
is.task.type=Type
is.task.type.recurrent=Recurrent task
is.task.type.urgent=Urgent task
is.team=Team
is.team.error.delete.has.projects=The team cannot be deleted because it is used in some projects
is.team.error.not.exist=The team doesn't exist
is.template.email.footer.preferences.information=You can configure your notification preferences in your profile.
is.template.email.footer.reason.follow=You are receiving this email it because you follow this story on the project <a href="{0}">{1}</a>.
is.template.email.footer.reason.new.stories=You are receiving this email it because you subscribed to notifications for new stories on the project <a href="{0}">{1}</a>.
is.template.email.footer.reason.new.tasks=You are receiving this email it because you subscribed to notifications for new urgent tasks on the project <a href="{0}">{1}</a>.
is.template.email.footer.unfollow=Unfollow it here: <a href="{0}">{0}</a>.
is.template.email.footer.website=This email has been sent automatically by iceScrum. For more information, see: https://www.icescrum.com?utm_source=email&utm_medium=link&utm_campaign=icescrum.
is.template.email.story.acceptedAs.subject=[{0}][story] {1} accepted as {2}
is.template.email.story.acceptedAs.text=Hello,<br><br>The story {0} has been accepted as {1}.
is.template.email.story.changedState.subject=[{0}][story] {1} state updated
is.template.email.story.changedState.text=Hello,<br><br>The state of the story <a href="{1}">{0}</a> has been updated, it''s now {2}.
is.template.email.story.commentDeleted.subject=[{0}][story] {1} - Comment deleted
is.template.email.story.commentDeleted.text=Hello,<br><br>Your comment on the story: <a href="{1}">{0}</a> has been deleted by {2}.
is.template.email.story.commentEdited.subject=[{0}][story] {1} - Comment edited
is.template.email.story.commentEdited.text=Hello,<br><br>A comment on the story : <a href="{1}">{0}</a> has been edited by {2}.
is.template.email.story.commented.subject=[{0}][story] {1} New comment
is.template.email.story.commented.text=Hello,<br><br>A new comment has been added on the story by {2}: <br>{3}<br> To respond: <a href="{1}">{0}</a>.
is.template.email.story.created.subject=[{0}][story] A new story has been added
is.template.email.story.created.text=Hello,<br><br>A new story has been added on your project: <a href="{1}">{0}</a><br><br>If you can''t click on the link below, copy/paste this url: {1}.
is.template.email.story.deleted.subject=[{0}][story] {1} has been deleted
is.template.email.story.deleted.text=Hello,<br><br>The story {0} has been deleted.
is.template.email.story.deleted.text.details=Hello,<br><br>The story {0} has been deleted.<br><br>Reason: <br>{1}.
is.template.email.story.updated.subject=[{0}][story] {1} has been updated
is.template.email.story.updated.text=Hello,<br><br>The story <a href="{1}">{0}</a> has been updated.<br><br>If you can''t click on the link below, copy/paste this url: {1}.
is.template.email.task.created.subject=[{0}][task] A new urgent task has been added
is.template.email.task.created.text=Hello,<br><br>A new urgent task has been added on your sprint: <a href="{1}">{0}</a><br><br>If you can''t click on the link below, copy/paste this url: {1}.
is.template.email.user.invitation.portfolio.text=Hello,<br><br>{0} ({1}) has invited you to register on iceScrum and join their portfolio "{2}" as {3}.
is.template.email.user.invitation.project.text=Hello,<br><br>{0} ({1}) has invited you to register on iceScrum and join their project "{2}" as {3}.
is.template.email.user.invitation.subject=Someone has invited you to register on iceScrum
is.template.email.user.invitation.team.text=Hello,<br><br>{0} ({1}) has invited you to register on iceScrum and join their team "{2}" as {3}.
is.template.email.user.invitation.text=<a href="{0}">Click here to register</a><br><br>If you cannot click on the link provided above then please use this URL: {0}.
is.template.email.user.retrieve.subject=[{0}] Requested new password
is.template.email.user.retrieve.text=Hello {0},<br><br>You have requested a new password from the IP address: {3}.<br><br>Login: {1}<br>New password: {2}<br><a href="{4}">Click here to login</a><br><br>If you can''t click on the link below, copy/paste this url: {4}.
is.user=User
is.user.accountExternal=External (LDAP)
is.user.admin=Admin
is.user.avatar=Avatar
is.user.dateCreated=Created profile on
is.user.email=Email
is.user.enabled=Enabled
is.user.error.externalAccount=External authentication, your password can't be reset in iceScrum
is.user.error.not.exist=The user does not exist
is.user.error.not.saved=The user is not saved
is.user.error.password.check=Passwords aren't the same
is.user.firstname=First name
is.user.lastLogin=Last login
is.user.lastUpdated=Updated profile on
is.user.lastname=Last name
is.user.password=Password
is.user.password.check=Passwords do not match
is.user.preferences.activity=Activity
is.user.preferences.language=Language
is.user.role.added.project=You have been added to the project:
is.user.role.removed.project=You have been removed from the project:
is.user.role.updated.project=Your role has changed on the project:
is.user.token=Active API tokens
is.user.token.name=Token name
is.user.token.name.placeholder=Name to recognize the token
is.user.username=Username
is.warning.database.message=The default embedded database (H2 Database Engine) must only be used in a testing environment. Please change to a MySQL, PostgreSQL, SQL Server or Oracle database to avoid problems. <br/>Please follow <a href="https://www.icescrum.com/documentation/config-groovy-file/#database?utm_source=email&utm_medium=link&utm_campaign=icescrum">to update it.</a>.
is.warning.database.title=Database needs to be changed
is.warning.httpPart.message=Your Tomcat server isn't compatible with iceScrum, push system has been disabled.<br/>Please follow <a href="https://www.icescrum.com/documentation/install-guide/#troubleshooting?utm_source=email&utm_medium=link&utm_campaign=icescrum">that guide</a> to upgrade it.
is.warning.httpPart.title=Tomcat version not compatible
is.warning.version=A new version is available: {0}
is.warning.version.message=<a href="{1}">Download the new version and install it.</a> <br> <em>{0}</em>
is.widget.error.delete=Error when removing the widget, check the logs
is.widget.error.duplicate=Error, you can't have more than one instance of this widget
is.widget.error.save=Error when saving the widget, check the logs
is.widget.error.update=Error when updating the widget, check the logs
portfolio.fkey.matches.invalid=Error, a portfolio key must be composed of capital letters and numbers only (with at least one letter)
portfolio.fkey.unique=A portfolio with the same project key already exists
project.endDate.blank=Error, a project end date is required
project.name.blank=Error, a project name is required
project.name.unique=A project with the same name already exists
project.pkey.blank=Error, a project key is required
project.pkey.matches.invalid=Error, a project key must be composed of capital letters and numbers only (with at least one letter)
project.pkey.unique=A project with the same project key already exists
project.startDate.blank=Error, a project start date is required
release.endDate.after.next=Error, check dates (endDate overlaps the next release)
release.endDate.before.startDate=Error, check dates (startDate cannot be after endDate)
release.endDate.blank=A release end date is required
release.name.blank=Error, a release name is required
release.name.unique=Error, a release with the same name already exists
release.sprint.not.done=Error, this release cannot be stopped, please check sprints states
release.startDate.before.previous=Error, check dates (startDate overlaps the previous release)
release.startDate.before.projectStartDate=Error, check dates (startDate cannot be before project startDate)
release.startDate.blank=A release start date is required
release.startDate.equals.endDate=Error, check dates (startDate cannot be equal to endDate)
sprint.endDate.blank=Error, a sprint end date is required
sprint.startDate.blank=Error, a sprint start date is required
story.actor.invalid=Error, invalid {0}: it must be in the same project as the story
story.dependsOn.invalid=Error, invalid {0}: it must be in the same project and its state must be greater or equal to the one of the current story
story.effort.invalid=Error, invalid {0} ({2}): it must be a number between 0 and 999
story.feature.invalid=Error, invalid {0}: it must be in the same project as the story
story.name.blank=Error, a story name is required
story.name.unique=Error, a story with the same name already exists
story.parentSprint.invalid=Error, invalid {0}: it must be in the same project as the story
task.estimation.invalid=Error, invalid {0}: the remaining time must be a positive number
task.name.blank=Error, a task name is required
task.name.unique=Error, a task with the same name already exists
task.parentProject.invalid=Error, invalid association: the task must be in the same project as its container (story or sprint)
task.spent.invalid=Error, invalid {0}: the time spent must be a positive number
task.type.invalid=Error, invalid {0}: a valid type is required when the task is not associated to a story
team.name.blank=Error, a team name is required
team.name.unique=Error, a team with the same name already exists
user.email.blank=An email is required
user.email.email.invalid=Your email is invalid
user.email.unique=This email is already used by another account
user.firstName.blank=Your first name is required
user.lastName.blank=Your last name is required
user.password.blank=A password is required
user.username.blank=A username is required
user.username.unique=This username is already taken
